<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.escapelife.site/osmos-feed/index.html</id>
    <title>escapelife::feed</title>
    <updated>2022-10-20T01:09:28.058Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://www.escapelife.site/osmos-feed/index.html"/>
    <link rel="self" href="https://www.escapelife.site/osmos-feed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[我是如何利用环境变量注入执行任意命令]]></title>
        <id>https://www.leavesongs.com/PENETRATION/how-I-hack-bash-through-environment-injection.html</id>
        <link href="https://www.leavesongs.com/PENETRATION/how-I-hack-bash-through-environment-injection.html"/>
        <updated>2022-10-20T01:09:23.710Z</updated>
        <summary type="html"><![CDATA[本文发表于跳跳糖，转载请联系对方。
这周三在『代码审计知识星球』中发了一段代码，用户可以控制环境变量，但后面没有太多可控的地方，最后找到了一处执行命令，不过命令用户也不可控。用PHP来演示一下就是下面这7行：
<?php
foreach($_REQUEST['envs'] as $key => $val) {
    putenv("{$key}={$va]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[分享下我 GitHub 被封的经历]]></title>
        <id>https://www.leavesongs.com/THINK/my-github-account-used-to-be-suspended.html</id>
        <link href="https://www.leavesongs.com/THINK/my-github-account-used-to-be-suspended.html"/>
        <updated>2022-10-20T01:09:23.338Z</updated>
        <summary type="html"><![CDATA[最近好像又有人 GitHub 被封，每隔一段时间就有。分享下我自己的经历吧，好几年以前了，也许还是有点参考价值。
账号被封，查找原因
那是 2017 年 12 月，有天早上起来突然发现自己的号phith0n登不上去了，具体的表现是：
账号登录不上，登录以后明确告诉我我好被封了
GitHub 个人页面访问显示 404
我自己名下所有项目，访问都是 404
但是我创建的 Group 还是好的，没有受]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022年我为什么订报纸]]></title>
        <id>https://www.leavesongs.com/THINK/why-subscribe-a-newspaper-in-2022.html</id>
        <link href="https://www.leavesongs.com/THINK/why-subscribe-a-newspaper-in-2022.html"/>
        <updated>2022-10-20T01:09:23.335Z</updated>
        <summary type="html"><![CDATA[前两天我在收拾屋子。
我家是个很典型的单人公寓，由于女朋友还没到新加坡来，现在的屋子一个人住恰到好处。不过一个人住总是一个熵增的过程，所以我会隔段时间收拾一下屋子，把一些不想要又舍不得丢的东西塞进我家里的一个“黑洞”里，这样外面看起来仍然是整齐的。
这个“黑洞”是一个正经防空洞——新加坡大部分民宅都配有一个防空洞，面积大概一两个平米，所以大部分人会选择将这个房间作为杂物间。
我就是在走进这个杂物间]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[新加坡企业是怎么做实名认证的？]]></title>
        <id>https://www.leavesongs.com/THINK/how-to-verify-individual-in-singapore.html</id>
        <link href="https://www.leavesongs.com/THINK/how-to-verify-individual-in-singapore.html"/>
        <updated>2022-10-20T01:09:23.235Z</updated>
        <summary type="html"><![CDATA[三月是国内个税申报的月份，也是新加坡个税申报的月份，前几天收到一封信，告诉我应该填写个税申报的表格了。

在这封信里，提到了下面这段话：
To file your Income Tax Return, log in to myTax Portal with Singpass.
这里面有说到一个东西叫Singpass，在我来新加坡的这几个月里，几乎可以把Singpass看成新加坡政府数字化建设的]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[技术写作二三事：原创情结]]></title>
        <id>https://www.zlovezl.cn/articles/on-tech-writing-original/</id>
        <link href="https://www.zlovezl.cn/articles/on-tech-writing-original/"/>
        <updated>2022-10-20T01:09:23.157Z</updated>
        <summary type="html"><![CDATA[2019 年的春节假期，我闲在家中，准备一次性刷完攒了大半年的“Python Weekly” 周报。在 6 月份的一封周报里，有一篇名为 “Python Idioms: Multiline Strings” 的文章，内容很精炼。前半部分先描述痛点：在 Python 中写多行字符串字面量，随后演示如何用 textwrap.dedent 函数来优化它。
部分内容摘录如下：
... The problem is that it’s just ugly, because indenting the strings actually inserts the indentation into the string. So you have to do this:
def create_snippet():
    code_snippet = """\
int main(int argc, char* argv[]) {
    return 0;
}"""

With dedent, we can indent the whole multiline string according to the current scope, so that it looks like a Pythonic code block...
巧合的是，我两个月前刚在博客上发布了“Python 工匠”的第 3 篇文章：“使用数字与字符串的技巧”。在这篇文章中，同样出现了 textwrap.dedent  函数。
我写的内容：
日常编码时，还有一种比较麻烦的情况。就是需要在已经有缩进层级的代码里，插入多行字符串字面量。因为多行字符串不能包含当前的缩进空格，所以，我们需要把代码写成这样：
def main():
    if user.is_active:
        message = """Welcom…]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vulhub万赞纪念与抽奖]]></title>
        <id>https://www.leavesongs.com/THINK/vulhub-10k-stars-moment.html</id>
        <link href="https://www.leavesongs.com/THINK/vulhub-10k-stars-moment.html"/>
        <updated>2022-10-20T01:09:23.135Z</updated>
        <summary type="html"><![CDATA[不知不觉离我所主导的开源项目Vulhub的第一个提交已经快5年了，Vulhub俨然已经成为我生活中的日常。就像我生活中的另外几个日常代码审计星球、Sec-News一样，他们并不是我刻意要去完成的一项工作，而成为了我现实中的“回调函数”。
用回调函数来形容这件事听起来很独特，但仔细想想确实如此——我会在分析最新漏洞后将其做成Vulhub环境提交到Github，我会在读到不错文章后点击浏览器上的按钮将]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 Python 编程 13 年后，我把经验写成了 400 页的书]]></title>
        <id>https://www.zlovezl.cn/articles/my-book-releases/</id>
        <link href="https://www.zlovezl.cn/articles/my-book-releases/"/>
        <updated>2022-10-20T01:09:23.096Z</updated>
        <summary type="html"><![CDATA[我写了一本 Python 语言的编程进阶书：《Python工匠：案例、技巧与工程实践》，本文是关于这本书背后的故事与一些致谢。

我一直觉得编程某种意义上是一门“手艺”，因为优雅而高效的代码，就如同完美的工艺品一样让人赏心悦目。就像一位用锤子敲敲打打了十几年的铁匠，总结出一套“如何锻造出锋利的刀”的经验之谈——我在代码世界也“敲敲打打”了十几年，沉淀下来的便是这本《Python工匠》。
我将自己这些年掌握的技巧、经验与编程建议，去粗取精后悉数写入书中，希望它能帮读者朋友们完成从初学者到工匠的跃迁。
书目前已经正式上市，欢迎点击购买。
本文主要内容来自书中的“前言”部分，略有删改。
结缘 Python
我初次接触 Python 是在 2008 年末。那时临近大学毕业，我凭着在学校里学到的一丁点儿 Java 知识四处求职。我从大学所在的城市南昌出发去了北京，借宿在一位朋友的出租屋里，他当时在巨鲸音乐网上班，用的主要编程语言正是 Python。
得知我正在寻找一份 Java 相关的工作，那位朋友跟我说：“写 Java 代码有啥意思啊？Python 比 Java 好玩多了，而且功能还特别强大，连 Google 都在用 !”
在他的热情“传道”下，我对 Python 语言产生了好奇心，于是找了一份当时最流行的开源教程 Dive into Python，开始学起 Python 来。
实话实说，之前在学校用 Java 和 C 语言编程时，我很少体会到编程的快乐，也从未期待过自己将来要以写代码为生。但神奇的是，在学了一些 Python 的基础知识，并用它写了几个小玩意儿以后，我突然意识到原来自己很喜欢编程，并开始期待找到一份以 Python 为主要编程语言的开发工作——也许这就是我和 Python 之间的缘分吧！
幸运的是，在当时的 CPyUG（中国 Python 用户组）邮件组里，正好有…]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[久等了，我的新书《Python工匠》开始预售]]></title>
        <id>https://www.zlovezl.cn/articles/pre-sale-of-the-python-craftsman/</id>
        <link href="https://www.zlovezl.cn/articles/pre-sale-of-the-python-craftsman/"/>
        <updated>2022-10-20T01:09:23.084Z</updated>
        <summary type="html"><![CDATA[引子
2008 年末，北京奥运会刚刚结束后不久。我——一名计算机专业的大四学生，因为一位朋友的极力推荐，开始试着把 Python 作为自己的第一编程语言。大学毕业后，我顺利成为了一名 Python 程序员，先后在搜狐和赶集网工作过，后来加入了深圳腾讯，目前担任蓝鲸工具 PaaS 平台的负责人。
在这十几年的职业生涯里，我参与过许多项目的后端开发与架构设计工作。虽然每个项目的复杂程度、活跃用户量各不相同，但它们大都使用 Python 语言编写。
在我看来，Python 是一门“易于上手，难于精通”的编程语言——虽然许多人都能用 Python 编写出可运行的程序，但只有少数人，掌握了写出高质量 Python 代码的诀窍。
而在现实世界中，代码质量常常会决定项目的成败。我见过许多被寄予厚望的大项目，前期光彩夺目，后期却躺在烂代码堆上逐渐腐败，缓慢走向死亡。我也参与过许多老项目，亲手偿还过代码质量方面的“技术债”，助它们重获生机。
“Python 工匠”的由来
慢慢地，我积累的 Python 编程经验越来越多，于是有了一份想把它们分享出去的冲动。后来，实在压抑不住那份冲动，便试着把这些经验落笔成了文章，日积月累，开源的技术文章系列：“Python 工匠” 就此诞生。
2020 年中，我开始思考如何把“Python 工匠”系列文章，升级成一本以“Python 进阶”为主题的编程书。虽然在当时的市面上，Python 进阶图书可谓汗牛充栋，又有《流畅的 Python》、《Effective Python》等珠玉在前，似乎没有再多一本“中文 Python 进阶书”的必要。
但也许因为自己是湖南人，骨子里有股“蛮”劲吧——总觉得自己写的东西独一份，能给读者一些不一样的体验。下定决心后，开始闭门写作，一年后终于成稿，之后便看着书稿在传统出版流程中缓慢流动。
今天，我很高兴地告诉大家，图书《Python 工匠：案例、技巧与工程实践》已经走完了出版前的所有准备工作，马上就要上市了。你在京东上就可预订本书，现在下单还可享受 8 折优惠。
预订《Python 工匠》：京东购买链接
图书简介
《Python 工匠：案例、技巧与工程实践》是一本编程进阶图书，旨在帮你掌握如何用 Python 写出结构清晰、易于维护的好代码。但与传统进阶书不同，它不是一本大而全的“语言高级特性参考手册”，而更像是一份“答卷”，一份我针对问题 “如何写好 Python 代码？” 交出的答卷。
答卷中的所有知识点，大体可分为两大部分：
第一部分：语言无关的通用知识，比如变量的命名原则、写注释时的注意事项、写条件分支语句的技巧，等等。这部分知识放之四海而皆准，可以运用在各种编程语言上，不光是 Python。
第二部分：与 Python 语言强相关的知识，比如自定义容器类型来改善代码、在恰当的时机抛出异常、活用生成器改善循环、用装饰器设计地道的 API，等等。
在表达形式方面，就像副标题“案例、技巧与工程实践”所说，全书的知识点会通过好几种不同的形式展现。你会读到一些深入语言核心的概念释疑，也会读到一些贴近工程实践的编程建议，在某些章节，你甚至还会发现一些像电子游戏一样有趣的案例故事。希望它们能为你带来些许不一样的感受。
当然，要了解一本书，看再多介绍文字，都不如读一段书中的内容来得真切。你可以访问《Python 工匠》的图灵社区主页，在“随书下载”部分找到《Python 工匠》的样章 PDF 文件。不妨先读读看。
“这本书适合我吗？”
在我看来，《Python 工匠》最适合以下人群阅读：
以 Python 为主要开发语言的工程师
工作中需要写一些 Python 代码的工程师
有其他语言编程经验、想学习如何写出高效 Python 代码的工程师
任何爱好编程、喜欢 Python 语言的读者
全书内容以进阶知识为主，里面虽有少量基础知识讲解，但并不全面，描述得也并不详尽。正因如此，假如你从未有过任何编程经验，我并不建议你通过本书来入门 Python。
在 Python 入门学习方面，我推荐由人民邮电出版社图灵公司出版的《Python 编程：从入门到实践》。当你对 Python 有了一些了解、打好基础后，再回过头来阅读本书，相信彼时你可以获得更好的阅读体验。
好了，关于《Python 工匠》的预售信息先介绍到这。感谢所有朋友一路以来对“Python 工匠”的支持，期待你拿到书后，第一时间与我分享你的阅读体验。再会！]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[低欲望社会——我的低欲望生活以及反思￼]]></title>
        <id>https://codechina.org/?p=24610</id>
        <link href="https://codechina.org/2022/10/low/"/>
        <updated>2022-10-19T04:06:41.000Z</updated>
        <summary type="html"><![CDATA[日本著名作家大前研一在2015年，曾经写了一本《低欲望社会》。 购买链接：https://u.jd.com/k […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[���ſ��� ipv6 ���ڼ�]]></title>
        <id>https://blog.codingnow.com/2022/10/telecom_ipv6.html</id>
        <link href="https://blog.codingnow.com/2022/10/telecom_ipv6.html"/>
        <updated>2022-10-17T01:49:42.000Z</updated>
        <summary type="html"><![CDATA[��ĩ�ڼ������� BT ���أ����� UPnP �޷���������ȥ��è���￴����ʲô����� �ҷ������ڵ��ſ���Ĭ���Ѿ����ɹ�è�����ţ����е�·��������Ϊһ������·����ʹ�ã�������� UPnP �� DMZ ������������Ҫ�ڹ�è�����á� �鿴��è�豸��ӡ��Ĭ�Ϲ���Ա�����¼��ȥ��û���ҵ�̫������ѡ�����������һ�£���Ҫһ����������Ա���ݲ��ܿ���ȫ�����ò˵���һ���˵���Ǵ�绰��һ��װ������ʦ��������ɫ�����������鷳�ˡ�ת��һ�룬����ô��ҿ����豸Ҫ����������Ӧ���õ���ͳһ���룬������һЩ���ֶο����õ��������Ŷԡ�������һ���׹���ϵͳ�ɱ�ʵ��̫���ˡ�...]]></summary>
        <author>
            <name>�Ʒ�� BLOG</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PaaS服务从Heroku迁移到fly.io小计]]></title>
        <id>https://www.leavesongs.com/SOFT/paas-service-from-heroku-to-fly-io.html</id>
        <link href="https://www.leavesongs.com/SOFT/paas-service-from-heroku-to-fly-io.html"/>
        <updated>2022-10-16T01:16:21.824Z</updated>
        <summary type="html"><![CDATA[今年8月得知了Heroku将要在今年11月彻底下线免费服务，我只有少量服务放在Heroku上，所以没有太在意，直到10月感觉到不得不开始做迁移相关的工作了，于是开始着手准备，并有了这篇文章。
这篇文章纯属是事后记录的一些流水账，可能缺少截图和代码片段，全当是作为一个故事看，可能不具备参考性。
为什么选择PaaS服务
从很久以前开始接触“虚拟主机”这个行业开始，我经历了虚拟主机、VPS、云主机、Pa]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python常用命令汇总]]></title>
        <id>https://www.escapelife.site/posts/b5b9c29f.html</id>
        <link href="https://www.escapelife.site/posts/b5b9c29f.html"/>
        <updated>2022-10-15T14:36:12.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><strong>本文主要汇总日常使用当中，常用的命令组合方式，来提高查询和系统管理能力！</strong></p>
</blockquote>
<p><img]]></summary>
        <author>
            <name>Escape</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[未来世界将会分成两种人￼]]></title>
        <id>https://codechina.org/?p=24493</id>
        <link href="https://codechina.org/2022/10/two/"/>
        <updated>2022-10-14T15:11:03.000Z</updated>
        <summary type="html"><![CDATA[虽然IT行业里面盛行996，其实并不是加班最狠的行业。我老婆楠子待过几家广告公司，其中一家几乎每天都要12点以 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 的几种函数传参模式]]></title>
        <id>https://www.zlovezl.cn/articles/go-func-argument-patterns/</id>
        <link href="https://www.zlovezl.cn/articles/go-func-argument-patterns/"/>
        <updated>2022-10-14T01:19:32.300Z</updated>
        <summary type="html"><![CDATA[1. 普通传参
Go 语言支持按顺序传入参数来调用函数，下面是一个示例函数：
// ListApplications 查询应用列表
func ListApplications(limit, offset int) []Application {
    return allApps[offset : offset+limit]
}

调用代码：
ListApplications(5, 0)

当你想增加新参数时，可以直接修改函数签名。比如，下面的代码给 ListApplications 增加了新的过滤参数 owner：
func ListApplications(limit, offset int, owner string) []Application {
    if owner != "" {
        // ...
    }
    return allApps[offset : offset+limit]
}

调用代码也需要随之改变：
ListApplications(5, 0, "piglei")
// 不使用 owner 过滤
ListApplications(5, 0, "")

显而易见，这种普通传参模式存在以下几个明显的问题：
可读性不佳：只支持用位置，不支持用关键字来区分参数，参数变多后，各参数含义很难一目了然
破坏兼容性：增加新参数后，原有调用代码必须进行对应修改，比如像上方的 ListApplications(5, 0, "") 一样，在 owner 参数的位置传递空字符串
为了解决这些问题，常见的做法是引入一个参数结构体（struct）类型。
2. 使用参数结构体
新建一个结构体类型，里面包含函数需要支持的所有参数：
// ListAppsOptions 是查询应用列表时的可选项
type ListAppsOptions struct …]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Minisforum UM560小主机办公一周体验]]></title>
        <id>https://www.leavesongs.com/THINK/um560-two-weeks-using-experience.html</id>
        <link href="https://www.leavesongs.com/THINK/um560-two-weeks-using-experience.html"/>
        <updated>2022-10-14T01:19:31.929Z</updated>
        <summary type="html"><![CDATA[本文推荐的UM560非与厂商合作推广，仅为我自己的使用体验。
我大四买了人生里第一台Macbook pro，从那会开始Mac卡顿的问题就一直困扰我到现在。当然这也可能是我自己的问题——我没钱买顶配Macbook，以前公司发的也是低配Macbook pro，我甚至用8G内存的13寸Mac直到2018年才换。
来新公司以后总算摸到了15寸Mac，但还是16G内存Intel芯片的老电脑，被Burps]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[古道西风瘦马，是扬州瘦马么？是讲述老妓的悲惨晚年么？]]></title>
        <id>https://codechina.org/?p=24458</id>
        <link href="https://codechina.org/2022/10/horse/"/>
        <updated>2022-10-13T11:44:54.000Z</updated>
        <summary type="html"><![CDATA[最近有个朋友问道，天净沙秋思里面那句“古道西风瘦马”是不是扬州瘦马。 我回复说， 当然不是，首先是诗词的气氛， […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[找出你生命中的决定性时刻￼]]></title>
        <id>https://codechina.org/?p=24424</id>
        <link href="https://codechina.org/2022/10/life/"/>
        <updated>2022-10-12T13:35:22.000Z</updated>
        <summary type="html"><![CDATA[看小说，看历史书的时候，我们会发现历史的发展进程往往是有决定性时刻的。 比如，曾经有一个有名的笑话叫做，如果丘 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[最好的选择是不做选择，重剑无锋，大巧不工￼]]></title>
        <id>https://codechina.org/?p=24396</id>
        <link href="https://codechina.org/2022/10/no-choice/"/>
        <updated>2022-10-11T13:21:47.000Z</updated>
        <summary type="html"><![CDATA[很多时候，我们一生中会面临无数的选择，怎么选择，往往是最常见的问题。昨天我写的文章《如何应对内卷，做一个更好的 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何应对内卷，做一个更好的自己￼]]></title>
        <id>https://codechina.org/?p=24357</id>
        <link href="https://codechina.org/2022/10/better-self/"/>
        <updated>2022-10-10T03:37:52.000Z</updated>
        <summary type="html"><![CDATA[我在公众号上最火的一篇文章叫做《为什么有些人用一年时间获得了你十年的工作经验？》，那篇文章写于2015年。那时 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[保持适当的孤独，有利于提高效率￼]]></title>
        <id>https://codechina.org/?p=24332</id>
        <link href="https://codechina.org/2022/10/lonely/"/>
        <updated>2022-10-09T07:31:42.000Z</updated>
        <summary type="html"><![CDATA[说到这个话题就不得不提到我一个朋友小A。他是一个社会化学习爱好者。他相信多人一起学习，容易形成一个互相监督互相 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我自己博客的一个XSS的故事]]></title>
        <id>https://www.leavesongs.com/PENETRATION/xss-from-my-blog.html</id>
        <link href="https://www.leavesongs.com/PENETRATION/xss-from-my-blog.html"/>
        <updated>2022-10-09T01:07:58.093Z</updated>
        <summary type="html"><![CDATA[今天晚上收到几个提醒，打开一看是有人在我博客评论区测试XSS：

本来这种测试司空见惯了，而且此人也没成功找到XSS，放以前我多半就关掉页面了。
不过我今晚不知为何临时起意，就顺势看了一下自己写的代码，居然被我自己找到一个XSS漏洞：

原因是什么呢？
0x01 开发历史介绍
我当时在开发这个回复按钮的时候，为了方便，直接用JavaScript伪协议来调用reply_to函数，比如：

reply]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[婚礼回顾和一些经验分享]]></title>
        <id>https://www.kawabangga.com/?p=4840</id>
        <link href="https://www.kawabangga.com/posts/4840"/>
        <updated>2022-10-08T23:37:58.000Z</updated>
        <summary type="html"><![CDATA[我在国庆完成了和老婆的婚礼，这件人生大事从计划到完成花费了至少1年的时间，牵扯了上百人的精力，值得记录一下自己 […]
Continue reading...
The post 婚礼回顾和一些经验分享 first appeared on 卡瓦邦噶！.]]></summary>
        <author>
            <name>laixintao</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[小区解封了，不过明天一早还需要做核酸]]></title>
        <id>https://codechina.org/?p=24309</id>
        <link href="https://codechina.org/2022/10/open/"/>
        <updated>2022-10-08T14:56:12.000Z</updated>
        <summary type="html"><![CDATA[今天一早7点，我就被老婆拉着去做核酸了。排队的时候，她给我看了一眼滨海新区的公众号。整个塘沽变成了低风险区，降 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[���� IO ģ��ı仯�ͷ�չ]]></title>
        <id>https://blog.codingnow.com/2022/10/io.html</id>
        <link href="https://blog.codingnow.com/2022/10/io.html"/>
        <updated>2022-10-08T06:11:14.000Z</updated>
        <summary type="html"><![CDATA[������Ϸ����� IO ģ����ʵһֱ���޸ġ�����İ汾��������������� �� һֱû�ж����һ����ԭ������Ϊ���Ǹ������趨��һ���Ƚϸߵ��������汾��Ҳ�ǿ��Դ������Ը��µġ����������汾����Ȼ���� IO ������ IO ģ�������������������ֻ���һ�����̰߳汾�� Lua ��� ltask ��ltask ����Ҳ����Ҫ���� IO ģ�������ġ���Щ���������Ҫ������� IO ģ�����ƣ������ع�Ҳ���Ǳ�Ȼ�ˡ�...]]></summary>
        <author>
            <name>�Ʒ�� BLOG</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么写作？￼]]></title>
        <id>https://codechina.org/?p=24279</id>
        <link href="https://codechina.org/2022/10/writting/"/>
        <updated>2022-10-07T11:42:24.000Z</updated>
        <summary type="html"><![CDATA[为什么写作？余华在《活着》的自序里面这么说， 一位真正的作家永远只为内心写作，只有内心オ会真实地告诉他，他的自 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[从偶遇Flarum开始的RCE之旅]]></title>
        <id>https://www.leavesongs.com/PENETRATION/flarum-rce-tour.html</id>
        <link href="https://www.leavesongs.com/PENETRATION/flarum-rce-tour.html"/>
        <updated>2022-10-07T01:18:42.926Z</updated>
        <summary type="html"><![CDATA[本文首发于跳跳糖，转载请联系站方。
一次日常测试中，偶然遇到了一个Flarum搭建的论坛，并获得了其管理员账号。本来到这里已经可以算完成了任务，将漏洞报给具体负责的人就结束了，但是既然已经拿到了管理员账号，何不尝试一下RCE呢？
首先，我在管理员后台看到当前Fla]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rapper都去考公务员了？未来会怎么样？]]></title>
        <id>https://codechina.org/?p=24246</id>
        <link href="https://codechina.org/2022/10/rapper/"/>
        <updated>2022-10-06T11:24:24.000Z</updated>
        <summary type="html"><![CDATA[昨天看《脱口秀大赛5》杨波的表演， 他说， 近两年，很多人考公务员我有个Rapper朋友都在考我说，呦，你怎么 […]]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[XRay三周年活动寄语]]></title>
        <id>https://www.leavesongs.com/THINK/xray-3-years.html</id>
        <link href="https://www.leavesongs.com/THINK/xray-3-years.html"/>
        <updated>2022-10-06T01:08:04.056Z</updated>
        <summary type="html"><![CDATA[上周XRay做了一次三周年活动，简单写了一段寄语，记录于博客。
大家好，我是phith0n，安全社区有很多人叫我P师傅，以前很抗拒这个称呼，总是给人一种互相吹捧的感觉，不过后来我换了一个角度理解这个称呼——以前坐公交车不认路的时候，我们上车时总会问司机：师傅，这个车到不到国贸大厦？
这么多年过去了，大部分人用上智能手机，搜索引擎，很少再有人会再问出这类问题。但是我还是愿意当一个普普通通的司机师傅]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 193 期）：前端与后端，谁更难？]]></title>
        <id>http://www.ruanyifeng.com/blog/2022/01/weekly-issue-193.html</id>
        <link href="http://www.ruanyifeng.com/blog/2022/01/weekly-issue-193.html"/>
        <updated>2022-01-21T00:48:38.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。（[通知] 下周欢度春节，周刊暂停，2月11日恢复。）...]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 192 期）：最大的机会来自新技术]]></title>
        <id>http://www.ruanyifeng.com/blog/2022/01/weekly-issue-192.html</id>
        <link href="http://www.ruanyifeng.com/blog/2022/01/weekly-issue-192.html"/>
        <updated>2022-01-14T00:39:50.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。...]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
</feed>