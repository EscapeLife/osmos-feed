<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.escapelife.site/osmos-feed/index.html</id>
    <title>escapelife::feed</title>
    <updated>2023-01-09T00:48:39.364Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://www.escapelife.site/osmos-feed/index.html"/>
    <link rel="self" href="https://www.escapelife.site/osmos-feed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[特斯拉降价，车主维权维的什么权？特斯拉还巴不得你闹，那就是最好的促销广告！]]></title>
        <id>https://codechina.org/?p=26980</id>
        <link href="https://codechina.org/2023/01/jiangjia/"/>
        <updated>2023-01-08T06:14:55.000Z</updated>
        <summary type="html"><![CDATA[特斯拉又又又……又降价了！你猜我怎么知道的？没有垃圾邮件，没有看到广告，没有朋友告知。 因为听说又有特斯拉车主 […]
特斯拉降价，车主维权维的什么权？特斯拉还巴不得你闹，那就是最好的促销广告！最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[排查一个特殊的 No space left on device]]></title>
        <id>https://manjusaka.blog/posts/2023/01/07/special-case-no-space-left-on-device/</id>
        <link href="https://manjusaka.blog/posts/2023/01/07/special-case-no-space-left-on-device/"/>
        <updated>2023-01-07T15:30:00.000Z</updated>
        <summary type="html"><![CDATA[<p>好久没写水文了，新年第一篇水文总得写一下，完成下 OKR，正好最近帮群友查了一个特殊的 No space left on device 问题，记录一下。</p>]]></summary>
        <author>
            <name>Manjusaka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么自比鲁迅的让我觉得不像，王小波门下走狗我也觉得不好，应该是“人只有不完美 值得歌颂”]]></title>
        <id>https://codechina.org/?p=26955</id>
        <link href="https://codechina.org/2023/01/luxun-wangxiaobo/"/>
        <updated>2023-01-07T13:01:51.000Z</updated>
        <summary type="html"><![CDATA[最近，我开始在看梁文道的《一千零一夜》，刚好听到讲《狂人日记》，讲鲁迅。 其实我上学的时候，课本上还有鲁迅，现 […]
为什么自比鲁迅的让我觉得不像，王小波门下走狗我也觉得不好，应该是“人只有不完美 值得歌颂”最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[晒得到太阳的房子]]></title>
        <id>https://greyli.com/?p=4718</id>
        <link href="https://greyli.com/sunroom/"/>
        <updated>2023-01-06T12:57:20.000Z</updated>
        <summary type="html"><![CDATA[搬到了一个能晒到太阳的房子，就在森林（公园）旁边。晚上十二点钟还能听到一班火车慢悠悠驶过的声音。 房子在马路边 […]]]></summary>
        <author>
            <name>李辉</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我爸从ICU出来了，转到了普通病房，但是还需要继续治疗]]></title>
        <id>https://codechina.org/?p=26913</id>
        <link href="https://codechina.org/2023/01/out-of-icu/"/>
        <updated>2023-01-06T01:51:08.000Z</updated>
        <summary type="html"><![CDATA[昨天医生联系我们，说可能今天要把他转出ICU。肺的问题可能还是很严重，但是从31号住进ICU到今天已经5天了， […]
我爸从ICU出来了，转到了普通病房，但是还需要继续治疗最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用StoreKit2不再需要恢复购买按钮，但是为了审核你还需要放一个【AppStore审核手记】]]></title>
        <id>https://codechina.org/?p=26850</id>
        <link href="https://codechina.org/2023/01/storekit2-appstore/"/>
        <updated>2023-01-04T04:31:14.000Z</updated>
        <summary type="html"><![CDATA[昨天我提交了一个新App，2023年我的计划就是开发一系列的小App试图在独立开发领域有一份收入。但是今天一早 […]
使用StoreKit2不再需要恢复购买按钮，但是为了审核你还需要放一个【AppStore审核手记】最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023年我的新年目标]]></title>
        <id>https://codechina.org/?p=26842</id>
        <link href="https://codechina.org/2023/01/2023-plans/"/>
        <updated>2023-01-04T01:29:16.000Z</updated>
        <summary type="html"><![CDATA[每年多少我都在谈新年目标，也许公开说了，也许没有公开写文章说，自己跟自己说了，或者跟朋友聊的时候，聊过。这些年 […]
2023年我的新年目标最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[从零开始，使用SwiftUI和PDFKit快速构建完全可定制的PDF阅读器]]></title>
        <id>https://codechina.org/?p=26809</id>
        <link href="https://codechina.org/2023/01/swiftui-pdfkit-pdfreader/"/>
        <updated>2023-01-03T13:39:05.000Z</updated>
        <summary type="html"><![CDATA[SwiftUI快速创建UI的能力非常强大，苹果还提供了PDFKit框架，所以，用SwiftUI和PDFKit可 […]
从零开始，使用SwiftUI和PDFKit快速构建完全可定制的PDF阅读器最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[万能的ChatGPT真有智能了么？一篇文章让你彻底搞懂ChatGPT-人类是怎么训练出了一只聪明的莎士比亚的猴子]]></title>
        <id>https://codechina.org/?p=25998</id>
        <link href="https://codechina.org/2023/01/chatgpt-ai-human-principle-and-limitation/"/>
        <updated>2023-01-02T04:18:48.000Z</updated>
        <summary type="html"><![CDATA[很多人说ChatGPT这样的人工智能已经拥有真正的人类智慧了。他们提到了许多例子，比如ChatGPT能够和人类 […]
万能的ChatGPT真有智能了么？一篇文章让你彻底搞懂ChatGPT-人类是怎么训练出了一只聪明的莎士比亚的猴子最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 的几种函数传参模式]]></title>
        <id>https://www.zlovezl.cn/articles/go-func-argument-patterns/</id>
        <link href="https://www.zlovezl.cn/articles/go-func-argument-patterns/"/>
        <updated>2023-01-02T00:46:46.317Z</updated>
        <summary type="html"><![CDATA[1. 普通传参
Go 语言支持按顺序传入参数来调用函数，下面是一个示例函数：
// ListApplications 查询应用列表
func ListApplications(limit, offset int) []Application {
    return allApps[offset : offset+limit]
}

调用代码：
ListApplications(5, 0)

当你想增加新参数时，可以直接修改函数签名。比如，下面的代码给 ListApplications 增加了新的过滤参数 owner：
func ListApplications(limit, offset int, owner string) []Application {
    if owner != "" {
        // ...
    }
    return allApps[offset : offset+limit]
}

调用代码也需要随之改变：
ListApplications(5, 0, "piglei")
// 不使用 owner 过滤
ListApplications(5, 0, "")

显而易见，这种普通传参模式存在以下几个明显的问题：
可读性不佳：只支持用位置，不支持用关键字来区分参数，参数变多后，各参数含义很难一目了然
破坏兼容性：增加新参数后，原有调用代码必须进行对应修改，比如像上方的 ListApplications(5, 0, "") 一样，在 owner 参数的位置传递空字符串
为了解决这些问题，常见的做法是引入一个参数结构体（struct）类型。
2. 使用参数结构体
新建一个结构体类型，里面包含函数需要支持的所有参数：
// ListAppsOptions 是查询应用列表时的可选项
type ListAppsOptions struct …]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Stay Simple, Stay Naive]]></title>
        <id>https://manjusaka.blog/posts/2023/01/01/stay-simple-stay-naive/</id>
        <link href="https://manjusaka.blog/posts/2023/01/01/stay-simple-stay-naive/"/>
        <updated>2023-01-01T19:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>本来想在农历年前交年终总结的，不过想了想，去年的年终总结就因为太懒导致我鸽了。所以这个“双年”怎么也得总结下2022了。不过说起来怎么还没去字节，就开始 ego 了起来。</p>]]></summary>
        <author>
            <name>Manjusaka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022 年终总结]]></title>
        <id>https://vim0.com/post/2022/</id>
        <link href="https://vim0.com/post/2022/"/>
        <updated>2023-01-01T08:30:40.000Z</updated>
        <summary type="html"><![CDATA[今天是 2023 年的第一天，我想写一篇年终总结，回顾一下 2022 年的一些事情。 同时也是一个自我的回顾。 2022 年终总结 2022 年是一个不大顺利的一年， 似乎因为经济下行]]></summary>
        <author>
            <name>咸糖 - 自律者自由</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022年的最后一天，我爸白肺了，我把我爸送进了ICU]]></title>
        <id>https://codechina.org/?p=26727</id>
        <link href="https://codechina.org/2023/01/my-father/"/>
        <updated>2023-01-01T01:12:21.000Z</updated>
        <summary type="html"><![CDATA[我今天把我父亲送进了ICU，我今天想聊聊这件事情。本来我是不太想聊这件事情，因为有一些personal的事情， […]
2022年的最后一天，我爸白肺了，我把我爸送进了ICU最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022年终总结]]></title>
        <id>https://www.leavesongs.com/THINK/talk-about-2022.html</id>
        <link href="https://www.leavesongs.com/THINK/talk-about-2022.html"/>
        <updated>2023-01-01T00:54:30.875Z</updated>
        <summary type="html"><![CDATA[现在是2022年12月31日晚上8点43分，还有3个多小时今年就过完了，就如同某个其他公司的年终总结一样，这一年发生了太多的事情。但是这些事情距离我是遥远与模糊的，这里还是用简短的篇幅说点和自己相关联的。
生活
距离我发表《出中国记》一年左右，新加坡的物价以肉眼可见的速度上涨，已不太适合在国内事业稳定的人前往。而我属于随遇而安的人，到哪里就在哪里躺下，已经逐渐习惯新加坡的生活。
说起物价，不得不提]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022年第四季度总结]]></title>
        <id>https://www.escapelife.site/posts/e3113340.html</id>
        <link href="https://www.escapelife.site/posts/e3113340.html"/>
        <updated>2022-12-31T15:59:59.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="2022-年第四季度总结"><a href="#2022-年第四季度总结" class="headerlink" title="2022 年第四季度总结"></a>2022]]></summary>
        <author>
            <name>Escape</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我的2022年年终总结，乏善可陈的一年]]></title>
        <id>https://codechina.org/?p=26695</id>
        <link href="https://codechina.org/2022/12/2022-end/"/>
        <updated>2022-12-30T22:35:15.000Z</updated>
        <summary type="html"><![CDATA[今天是2022年的最后一天。这是我最不喜欢的一年，希望是这样的最后一年。 这一年最大的主题就是封控。原本我以为 […]
我的2022年年终总结，乏善可陈的一年最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[达芬奇综合症，我的病有名字了]]></title>
        <id>https://codechina.org/?p=26668</id>
        <link href="https://codechina.org/2022/12/dafenqi/"/>
        <updated>2022-12-30T01:25:33.000Z</updated>
        <summary type="html"><![CDATA[头两天在网上看到这么一个帖子： 我立刻发现，这就是我的问题。 今年是一个很荒废的年头，做了很多事情，但是完成的 […]
达芬奇综合症，我的病有名字了最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[兔年邮票和我们的时代精神]]></title>
        <id>https://codechina.org/?p=26643</id>
        <link href="https://codechina.org/2022/12/rabbit-stamp/"/>
        <updated>2022-12-29T05:00:46.000Z</updated>
        <summary type="html"><![CDATA[最近中国邮政推出了今年的生肖邮票，每年生肖票都会成为一个热点。今年也成为了一个热点。然而，今年的热点跟往年有所 […]
兔年邮票和我们的时代精神最先出现在Tinyfool的个人网站。]]></summary>
        <author>
            <name>tinyfool</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[iOS备用机自动充电方案]]></title>
        <id>https://www.leavesongs.com/THINK/iOS-with-chuangmiplug-smart-plug2.html</id>
        <link href="https://www.leavesongs.com/THINK/iOS-with-chuangmiplug-smart-plug2.html"/>
        <updated>2022-12-29T00:47:48.361Z</updated>
        <summary type="html"><![CDATA[搬到新加坡以后，我拥有了很多张手机卡：
1张国内的电话卡，回国时使用
1张新加坡电话卡，本地使用
1张马来西亚电话卡，去马来西亚旅行时使用
1张英国电话卡，去欧洲旅行时使用
相对应的，我需要有备用机来运行这些号码。正好手上有一台旧的iPhone XR，于是我就把其中两张卡插到了这个手机里。但随之而来的是另一个问题，手机长期插电对电池非常不友好，很有可能导致备用机电池彻底废掉。
垃圾佬的家里从来]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[我自己博客的一个XSS的故事]]></title>
        <id>https://www.leavesongs.com/PENETRATION/xss-from-my-blog.html</id>
        <link href="https://www.leavesongs.com/PENETRATION/xss-from-my-blog.html"/>
        <updated>2022-12-28T00:45:57.522Z</updated>
        <summary type="html"><![CDATA[今天晚上收到几个提醒，打开一看是有人在我博客评论区测试XSS：

本来这种测试司空见惯了，而且此人也没成功找到XSS，放以前我多半就关掉页面了。
不过我今晚不知为何临时起意，就顺势看了一下自己写的代码，居然被我自己找到一个XSS漏洞：

原因是什么呢？
0x01 开发历史介绍
我当时在开发这个回复按钮的时候，为了方便，直接用JavaScript伪协议来调用reply_to函数，比如：

reply]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[如果编程就是写作]]></title>
        <id>https://www.zlovezl.cn/articles/if-programming-is-writing/</id>
        <link href="https://www.zlovezl.cn/articles/if-programming-is-writing/"/>
        <updated>2022-12-28T00:45:56.853Z</updated>
        <summary type="html"><![CDATA[很多人会把编程比作写作，比如《Thinking in Java》的作者 Bruce Eckel 就说：“程序员就是作家。”二者的确也有许多相似之处，好文章和好代码，都离不精确的结构与优美的表达。写作时，每个人都能用词语拼出句子，组成文章，但并非所有人都能写出好文章，编程也是一样。
不过严格来说，编程和写作虽有少许相似，却仍是两个迥异的技能，在很多方面差别很大。比如我们很少会重写一篇已发表的文章，但重构一段能正常运行的代码实属家常便饭。
不过这一次，我们不妨把编程中那些复杂概念抛掷一旁，来一次奇思妙想：“如果编程就是写作，我们能从中学到些什么？”
1. 使用人称代词
写文章时，我们常常会使用人称代词来指代人物的名字，以此减少冗余，提升文本的流畅度。这个技巧当然也可以用到编程中。
以下代码重复使用了一个冗长的表达式：
def run_server():
    if check(data.servier_config.host):
        start_server(data.servier_config.host)
    else:
        logger.error('Server %s is invalid.', data.servier_config.host)

定义一个临时变量，作为代词使用来简化代码：
def run_server():
    host = data.servier_config.host
    if check(host):
        start_server(host)
    else:
        logger.error('Server %s is invalid.', host)

2. 搭配使用长短句
写作时， 如何选择句子的长短是一门学问。汪曾祺说过：“语言的奥秘，说穿了不过是长句与短句的搭配。”长句信息…]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[推荐一个方便好用的 ChatGPT 客户端]]></title>
        <id>https://cuiqingcai.com/36065.html</id>
        <link href="https://cuiqingcai.com/36065.html"/>
        <updated>2022-12-27T11:00:13.000Z</updated>
        <summary type="html"><![CDATA[<p>这段时间，想必大家肯定早就领教过 ChatGPT 的威力了吧。</p>
<p>我们跟它说各种内容，比如写代码、汇总周报、写邮件、写诗句、查百科什么的，ChatGPT 都对答如流，根本不在话下。</p>
<p>比如说让它基于 Vue3 写一个 div的拖拽实现，思路清晰，代码]]></summary>
        <author>
            <name>静觅</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ChatGPT 正在杀死编程里的乐趣]]></title>
        <id>https://www.zlovezl.cn/articles/chatgpt-and-how-we-programming/</id>
        <link href="https://www.zlovezl.cn/articles/chatgpt-and-how-we-programming/"/>
        <updated>2022-12-27T00:47:56.588Z</updated>
        <summary type="html"><![CDATA[多年以来，编程一直是我生命最重要的快乐来源之一，我从没细想过这份快乐能伴随我多久。但就在几天前，在观摩了 ChatGPT 替我编写一个 Python 程序的全过程后，我突然有种强烈的感觉：不远的将来，人们能从编程中获得的乐趣可能会逐渐消失。
换句话说，ChatGPT 正在缓慢地“杀死”编程里的乐趣。在解释这个观点之前，让我先带你简单回顾一下：ChatGPT 到底帮我写了个什么程序。
用 ChatGPT 编写程序
先简单介绍一下 ChatGPT。ChatGPT 是人工智能公司 OpenAI 在 2022 年 11 月份推出的基于 GPT 自然语言生成模型的聊天机器人。它功能强大，能轻松完成许多在人类眼中非常复杂的任务，比方说：根据你描述的需求写一个可运行的程序。
前天晚上十一点左右，我正坐在床上刷手机，突然想起一个给路由器用的工具脚本，已经拖延了几个月都没动工。既然自己不愿写，不如这次试试让 ChatGPT 来帮我完成。
这个工具的需求简述如下：
接收一个 URL 地址作为参数，将该 URL 里的域名，以及该 URL 所返回的页面里的所有域名，一并转换成 dnsmasq 服务的配置条目，写入到 /etc/dnsmasq.conf 文件中（需要考虑重复写入）。
为了让 ChatGPT 写代码，我需要用自然语言清楚描述程序的用途和大概的执行流程，这个过程花了我 5 分钟左右。
需求描述如下：
Write a Python program, it accepts an URL address url from command line input, the program extract the domain name from url and stores it in a variable called src_domain, then it starts to request …]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 工匠：语句、表达式和海象操作符]]></title>
        <id>https://www.zlovezl.cn/articles/stmt-expr-and-walrus-operator/</id>
        <link href="https://www.zlovezl.cn/articles/stmt-expr-and-walrus-operator/"/>
        <updated>2022-12-27T00:47:56.586Z</updated>
        <summary type="html"><![CDATA[让我们从两行最简单的 Python 代码开始。
>>> name = 'piglei'
>>> print(f'Hello {name}!')
Hello piglei!

这是一个“Hello World”程序，你也许已经见过它无数次，对里面的每个字母都了如指掌。但你可能从未意识到，上面两行代码，刚好对应着 Python 语言里的两个重要概念：语句（statement） 和 表达式（expression）。
具体来说，name = 'piglei' 是一行赋值语句，它将字符串 'piglei' 赋给了 name 变量。print(f'Hello {name}!') 则是一个表达式，它通过调用内置函数 print 往屏幕打印信息。
表达式的特点
编写代码时，语句和表达式是两类最基本的代码单元。
虽然在日常表达中，我们会把语句和表达式区分开来，但二者并非完全不同——表达式实际上就是一种特殊的语句。和普通语句比起来，表达式的特别之处在于它拥有一个（或多个）返回值。
举例来说，前面的 print(...) 表达式就会返回一个值：None。你可以像下面这样获取它：
# print 函数总是返回 None
>>> val = print(f'Hello {name}!')
Hello piglei!
>>> val is None
True

虽然这么做没啥实际用途，但它足够体现出表达式的独特之处——因为你永远无法对普通语句做出类似的事情。无论是“赋值语句”、“循环语句”，还是一个“条件分支语句”，你永远都无法将其赋值给某个变量，这在语法上无从谈起：
>>> val = (name = 'piglei')
  File "<stdin>", line 1
    val = (name = 'piglei')
                ^
SyntaxError: invali…]]></summary>
        <author>
            <name>piglei</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[从偶遇Flarum开始的RCE之旅]]></title>
        <id>https://www.leavesongs.com/PENETRATION/flarum-rce-tour.html</id>
        <link href="https://www.leavesongs.com/PENETRATION/flarum-rce-tour.html"/>
        <updated>2022-12-26T00:46:54.168Z</updated>
        <summary type="html"><![CDATA[本文首发于跳跳糖，转载请联系站方。
一次日常测试中，偶然遇到了一个Flarum搭建的论坛，并获得了其管理员账号。本来到这里已经可以算完成了任务，将漏洞报给具体负责的人就结束了，但是既然已经拿到了管理员账号，何不尝试一下RCE呢？
首先，我在管理员后台看到当前Fla]]></summary>
        <author>
            <name>phithon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 193 期）：前端与后端，谁更难？]]></title>
        <id>http://www.ruanyifeng.com/blog/2022/01/weekly-issue-193.html</id>
        <link href="http://www.ruanyifeng.com/blog/2022/01/weekly-issue-193.html"/>
        <updated>2022-01-21T00:48:38.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。（[通知] 下周欢度春节，周刊暂停，2月11日恢复。）...]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[科技爱好者周刊（第 192 期）：最大的机会来自新技术]]></title>
        <id>http://www.ruanyifeng.com/blog/2022/01/weekly-issue-192.html</id>
        <link href="http://www.ruanyifeng.com/blog/2022/01/weekly-issue-192.html"/>
        <updated>2022-01-14T00:39:50.000Z</updated>
        <summary type="html"><![CDATA[这里记录每周值得分享的科技内容，周五发布。...]]></summary>
        <author>
            <name>阮一峰的网络日志</name>
        </author>
    </entry>
</feed>